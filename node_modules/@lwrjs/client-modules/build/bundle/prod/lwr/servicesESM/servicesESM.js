const e=[];let o;const t=globalThis.LWR;function n(){return t}globalThis.LWR.define?globalThis.LWR=Object.freeze({define:globalThis.LWR.define}):delete globalThis.LWR;const a={addLoaderPlugin:()=>{console.warn("API is not supported in ESM format")},handleStaleModule:function(t){e.push(t),o||(o=new WebSocket(`ws://${location.host}`),o.addEventListener("message",(async({data:o})=>{const t=JSON.parse(o);if("moduleUpdate"===t.eventType){const{oldHash:o,newHash:n,module:{specifier:a}}=t.payload;for(let t=0;t<e.length;t++){if(null!==(0,e[t])({name:a,oldHash:o,newHash:n}))break}}})))},appMetadata:function(){const{appId:e,bootstrapModule:o,rootComponent:t,rootComponents:a}=n();return{appId:e,bootstrapModule:o,rootComponent:t,rootComponents:a}}(),serverData:n().serverData||{}};export{a as services};
//# sourceMappingURL=servicesESM.js.map
